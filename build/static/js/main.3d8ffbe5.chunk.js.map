{"version":3,"sources":["sounds/chessMove.mp3","sounds/chessCapture.mp3","sounds/newGame.mp3","sounds/checkMate.mp3","firebase.js","pages/ChessRoom.js","pages/Login.js","App.js","reportWebVitals.js","index.js"],"names":["process","firebaseConfig","apiKey","REACT_APP_FIREBASE_API_KEY","authDomain","REACT_APP_AUTH_DOMAIN","projectId","REACT_APP_PROJECT_ID","storageBucket","REACT_APP_STORAGE_BUCKET","messagingSenderId","REACT_APP_MESSAGING_SENDER_ID","appId","REACT_APP_APP_ID","measurementId","REACT_APP_MEASUREMENT_ID","app","initializeApp","auth","getAuth","db","getAnalytics","getFirestore","googleProvider","GoogleAuthProvider","signInWithGoogle","signInWithPopup","then","result","credential","credentialFromResult","token","accessToken","user","console","log","catch","error","errorCode","code","errorMessage","message","email","credentialFromError","STARTING_POSITION","GAME_DOC_ID","styles","container","backgroundColor","minHeight","display","alignItems","justifyContent","flexWrap","padding","button","fontSize","border","cursor","movesContainer","width","maxWidth","height","overflowY","margin","movesText","color","ChessRoom","useState","Chess","firebaseChessBoard","setFirebaseChessBoard","firebaseChessBoardHistory","setFirebaseChessBoardHistory","firebaseChessBoardPgn","setFirebaseChessBoardPgn","undoMovesHistory","setUndoMovesHistory","firebaseGameId","firebaseGamePosition","setFirebaseGamePosition","useRef","sideToMove","setSideToMove","currentBoardWidth","setCurrentBoardWidth","resetGame","a","gameRef","doc","setDoc","position","pgn","moves","merge","getDoc","gameSnap","data","newGameSound","id","useEffect","onSnapshot","useSound","chessMoveSfx","sprite","move","chessMoveSound","chessCaptureSfx","capture","chessCaptureSound","chessCheckmateSfx","checkMate","checkMateSound","chessNewGameSfx","newGame","players","name","currentUser","displayName","style","map","i","src","photoURL","alt","marginRight","borderRadius","resizeMode","includes","flexDirection","transitionDuration","calcWidth","screenWidth","onDrop","sourceSquare","targetSquare","piece","newChessBoard","moveInfo","length","load_pgn","from","to","promotion","history","fen","split","sideMadeLastMove","san","flags","updateGameOnMove","boardStyle","onClick","signOut","err","flex","textAlign","plysToMoveCount","Math","ceil","Array","keys","num","turn","numberMovesColumn","className","marginLeft","filter","_","index","blackMovesColumn","marginBottom","lastMove","undo","undoMoves","tempUndo","pop","Login","signedInRoutes","path","component","signedOutRoutes","App","isUserLoggedIn","setIsUserLoggedIn","onAuthStateChanged","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oSAAe,MAA0B,sCCA1B,MAA0B,yCCA1B,MAA0B,oCCA1B,MAA0B,sC,0CC2BrCA,ueAEEC,EAAiB,CACrBC,O,EAVAC,2BAWAC,W,EAVAC,sBAWAC,U,EAVAC,qBAWAC,c,EAVAC,yBAWAC,kB,EAVAC,8BAWAC,M,EAVAC,iBAWAC,c,EAVAC,0BAaIC,EAAMC,YAAchB,GACpBiB,EAAOC,YAAQH,GAIfI,GAFYC,YAAaL,GAEpBM,YAAaN,IAelBO,EAAiB,IAAIC,IAGdC,EAAmB,WAC9BC,YAAgBR,EAAMK,GACnBI,MAAK,SAAAC,GAEJ,IAAMC,EAAaL,IAAmBM,qBAAqBF,GACrDG,EAAQF,EAAWG,YAEnBC,EAAOL,EAAOK,KAEpBC,QAAQC,IAAI,2BAA4BN,EAAYE,EAAOE,MAE5DG,OAAM,SAAAC,GAEL,IAAMC,EAAYD,EAAME,KAClBC,EAAeH,EAAMI,QAErBC,EAAQL,EAAMK,MAEdb,EAAaL,IAAmBmB,oBAAoBN,GAE1DH,QAAQC,IAAI,SAAUE,EAAOC,EAAWE,EAAcE,EAAOb,O,QCrE7De,EACJ,2DAEIC,EAAc,uBA+TpB,IAAMC,EAAS,CACbC,UAAW,CACTC,gBAAiB,UACjBC,UAAW,QACXC,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBC,SAAU,OACVC,QAAS,kBAGXC,OAAQ,CACNP,gBAAiB,cACjBQ,SAAU,GACVC,OAAQ,OACRC,OAAQ,WAGVC,eAAgB,CACdT,QAAS,OACTF,gBAAiB,UACjBY,MAAO,IACPC,SAAU,OACVC,OAAQ,oBACRb,UAAW,IACXG,eAAgB,gBAChBW,UAAW,SACXC,OAAQ,0BAGVC,UAAW,CACTT,SAAU,GACVU,MAAO,UAIIC,EAjWf,WAAsB,IAAD,EACiCC,mBAAS,IAAIC,GAD9C,mBACZC,EADY,KACQC,EADR,OAE+CH,mBAAS,IAFxD,mBAEZI,EAFY,KAEeC,EAFf,OAGuCL,mBACxD,4DAJiB,mBAGZM,EAHY,KAGWC,EAHX,OAO6BP,mBAAS,IAPtC,mBAOZQ,EAPY,KAOMC,EAPN,OAQyBT,mBAASvB,GARlC,mBAQZiC,EARY,aAUjBV,mBAASxB,IAVQ,mBASZmC,EATY,KASUC,EATV,QAWIC,iBAAO,MACMb,mBAAS,MAZ1B,mBAYZc,EAZY,KAYAC,EAZA,OAa+Bf,mBAAS,KAbxC,mBAaZgB,EAbY,KAaOC,EAbP,KAkBbC,EAAS,uCAAG,WAAMR,GAAN,iBAAAS,EAAA,6DAEVC,EAAUC,YAAIrE,EAAI,QAAS0D,GACjCY,YACEF,EACA,CAAEG,SAAU/C,EAAmBgD,IAAK,GAAIC,MAAO,IAC/C,CAAEC,OAAO,IANK,SAQOC,YAAOP,GARd,OAQVQ,EARU,OAShB9D,QAAQC,IAAI6D,EAASC,QACrB/D,QAAQC,IAAIqC,GACZC,EAA6BuB,EAASC,OAAOJ,OAC7CK,GAAa,CAAEC,GAAI,YAZH,2CAAH,sDAkEfC,qBAAU,WAKR,OAJoBC,YAAWZ,YAAIrE,EAAI,QAASyB,IAAc,SAAA4C,GAC5DT,EAAwBS,EAAIQ,OAAON,UACnChB,EAAyBc,EAAIQ,OAAOL,UAGrC,IA1FgB,IAoHMC,EApHN,EA4FMS,YAASC,EAAc,CAC9CC,OAAQ,CACNC,KAAM,CAAC,IAAK,QAFTC,GA5FY,uBAkGSJ,YAASK,EAAiB,CACpDH,OAAQ,CACNI,QAAS,CAAC,IAAK,QAFZC,GAlGY,wBAwGMP,YAASQ,EAAmB,CACnDN,OAAQ,CACNO,UAAW,CAAC,EAAG,QAFZC,GAxGY,wBA8GIV,YAASW,EAAiB,CAC/CT,OAAQ,CACNU,QAAS,CAAC,EAAG,QAFVhB,GA9GY,qBA+IbiB,GAAU,CACd,CAAEC,KAAMlG,EAAKmG,YAAYC,aACzB,CAAEF,KAAM,oBAGV,OACE,sBAAKG,MAAOzE,EAAOC,UAAnB,UACE,8BACGoE,GAAQK,KAAI,WAAWC,GAAX,IAAGL,EAAH,EAAGA,KAAH,OACX,sBAAKG,MAAO,CAAErE,QAAS,OAAQC,WAAY,UAA3C,UACE,qBACEuE,IAAKxG,EAAKmG,YAAYM,SACtBC,IAAI,GACJL,MAAO,CACLzD,OAAQ,GACR+D,YAAa,GACbC,aAAc,MACdC,WAAY,aAGhB,oBAEER,MAAO,CACLrD,MAAO,UACPZ,QAAS,GAETE,SAAU,iCACVR,gBACEoE,EAAKY,SAAS,SAA0B,MAAf9C,GAErBkC,EAAKY,SAAS,SAA0B,MAAf9C,EADzB,UAGA,WAZV,SAeGkC,GAdIK,WAmBb,sBACEF,MAAO,CACLrE,QAAS,OACT+E,cAAe,SACf9E,WAAY,UAJhB,UAOE,cAAC,IAAD,CACEwC,SAAUZ,EACVmD,mBAAoB,IACpBC,UAAW,YAAsB,IAAnBC,EAAkB,EAAlBA,YACRA,GAAehD,EAAoB,IACrCC,EAAqB+C,EAAc,KAGvCC,OAAQ,YAA4C,IAAzCC,EAAwC,EAAxCA,aAAcC,EAA0B,EAA1BA,aAA0B,EAAZC,OArKtB,SAACF,EAAcC,EAAcC,GAIpD,IAAMC,EAAgB,IAAIpE,EAKpBqE,GAH6B,IAAjChE,EAAsBiE,QAClBF,EAAcG,SAASlE,GAEZ+D,EAAchC,KAAK,CAClCoC,KAAMP,EACNQ,GAAIP,EACJQ,UAAW,OAOb,GAJAxE,EAAsBkE,GACtBhE,EAA6BgE,EAAcO,WAGvCN,EAAU,CACZvD,EAAcsD,EAAcQ,MAAMC,MAAM,KAAK,IADjC,MAG4B,MAAtCT,EAAcQ,MAAMC,MAAM,KAAK,GAC3B,CAAEC,iBAAkB,QAASjE,WAAY,SACzC,CAAEiE,iBAAkB,QAASjE,WAAY,SAHvCiE,EAFI,EAEJA,iBAAkBjE,EAFd,EAEcA,WAI1BhD,QAAQC,IAAR,UACKgH,EADL,wBACqCT,EAASU,IAD9C,wBACiElE,EADjE,gBANY,IAUJmE,EAAeX,EAAfW,MAAeX,EAARU,IAEDpB,SAAS,MAAOhB,GAAe,CAAEb,GAAI,cAEzC,MAAVkD,GAA2B,MAAVA,EACbxC,GAAkB,CAAEV,GAAI,YACxBO,GAAe,CAAEP,GAAI,SAEzB,IAAMX,EAAUC,YAAIrE,EAAI,QAASyB,GACjC6C,YACEF,EACA,CACEG,SAAU8C,EAAcQ,MACxBpD,MAAO4C,EAAcO,UACrBpD,IAAK6C,EAAc7C,OAErB,CAAEE,OAAO,KAyHLwD,CAAiBhB,EAAcC,IAEjC3E,MAAOwB,EACPmE,WAAY,CAAEvF,OAAQ,0BAExB,gCACE,wBACEuD,MAAO,CACL/D,SAAU,GACVF,QAAS,WACTwE,aAAc,MACd9E,gBAAiB,UACjBkB,MAAO,UACPR,OAAQ,WAEVyC,GAAG,QACHqD,QAAS,kBAAMlE,EAAUR,IAV3B,sBAcA,wBACEyC,MAAO,CACL/D,SAAU,GACVF,QAAS,WACTwE,aAAc,MACd9E,gBAAiB,UACjBkB,MAAO,UACPR,OAAQ,WAEVyC,GAAG,QACHqD,QAAS,kBACPC,YAAQvI,GACLS,MAAK,kBAAMO,QAAQC,IAAI,+BACvBC,OAAM,SAAAsH,GAAG,OAAIxH,QAAQC,IAAIuH,OAbhC,4BAqBJ,sBAAKnC,MAAO,CAAErE,QAAS,OAAQ+E,cAAe,UAA9C,UACE,sBAAKV,MAAOzE,EAAOa,eAAnB,UACE,qBACE4D,MAAO,CACLoC,KAAM,EACN3G,gBAAiB,UACjB4G,UAAW,UAJf,SApHkB,SAAA/D,GACxB,IAAMgE,EACJhE,EAAM8C,OAAS,IAAM,EAAI9C,EAAM8C,OAAS,EAAImB,KAAKC,KAAKlE,EAAM8C,OAAS,GAMvE,OAJkBqB,MAAMnB,KAAKmB,MAAMH,GAAiBI,QAAQzC,KAC1D,SAAA0C,GAAG,OAAIA,EAAM,KAGE1C,KAAI,SAAA2C,GAAI,OACvB,mBAAG5C,MAAO,CAAErD,MAAO,UAAWV,SAAU,IAAxC,SAA+C2G,OAkHxCC,CAAkB5F,KAErB,qBAAK6F,UAAU,WAAW9C,MAAO,CAAEoC,KAAM,EAAGW,WAAY,IAAxD,UAvIiBzE,EAwIGrB,EAvI1BqB,EACG0E,QAAO,SAACC,EAAGC,GAAJ,OAAcA,EAAQ,IAAM,KACnCjD,KAAI,SAAAf,GAAI,OAAI,mBAAGc,MAAO,CAAErD,MAAO,UAAWV,SAAU,IAAxC,SAA+CiD,UAuIxD,qBAAK4D,UAAU,WAAW9C,MAAO,CAAEoC,KAAM,GAAzC,SArIiB,SAAA9D,GAAK,OAC5BA,EACG0E,QAAO,SAACC,EAAGC,GAAJ,OAAcA,EAAQ,IAAM,KACnCjD,KAAI,SAAAf,GAAI,OAAI,mBAAGc,MAAO,CAAErD,MAAO,UAAWV,SAAU,IAAxC,SAA+CiD,OAmIrDiE,CAAiBlG,QAItB,sBACE+C,MAAO,CACLrE,QAAS,OACTE,eAAgB,WAChBuH,aAAc,kBAJlB,UAOE,wBACEpD,MAAOzE,EAAOS,OACdiG,QAAO,sBAAE,kCAAAjE,EAAA,yDACDqF,EAAWtG,EAAmBuG,OACpC3I,QAAQC,IAAIyI,GACK,OAAbA,EAHG,wDAKDpF,EAAUC,YAAIrE,EAAI,QAASyB,GAL1B,SAOgBkD,YAAOP,GAPvB,OAODQ,EAPC,OAQD8E,EAAY9E,EAASC,OAAOrB,iBAClCc,YACEF,EACA,CAAEZ,iBAAiB,GAAD,mBAAMkG,GAAN,CAAiBF,KACnC,CAAE9E,OAAO,IAGXjB,EAAoB,GAAD,mBAAKD,GAAL,CAAuBgG,KAfnC,4CAFX,0BAyBA,wBACErD,MAAOzE,EAAOS,OACdiG,QAAS,WACP,IAAMuB,EAAQ,YAAOnG,GACrB,GAAwB,IAApBmG,EAASpC,OAAb,CAFa,MAGeoC,EAASC,MAA7B3B,EAHK,EAGLA,MAAOR,EAHF,EAGEA,KAAMC,EAHR,EAGQA,GAEX,MAAVO,GAA2B,MAAVA,EACbxC,GAAkB,CAAEV,GAAI,YACxBO,GAAe,CAAEP,GAAI,SAEzBtB,EAAoBkG,GAEpBzG,EAAmBmC,KAAK,CAAEoC,OAAMC,SAbpC,oC,sBCjTK,SAASmC,IACtB,OACE,sBAAKZ,UAAU,YAAf,UACE,oBAAI9C,MAAO,CAAErD,MAAO,SAApB,kDACA,qBAAKmG,UAAU,gBAAf,SACE,yBAAQA,UAAU,wBAAwBb,QAAS/H,EAAnD,UACE,qBACEiG,IAAI,yDACJE,IAAI,gBAEN,iECRV,IAgBMsD,EAAiB,WACrB,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAI,gBAAmBC,UAAWjH,IACzC,cAAC,IAAD,CAAOgH,KAAI,GAAMC,UAAWjH,UAM9BkH,EAAkB,WACtB,OACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOF,KAAI,GAAMC,UAAWH,SAMrBK,EArCH,WAAM,MAE4BlH,mBAAS,MAFrC,mBAETmH,EAFS,KAEOC,EAFP,KAahB,OAVAC,YAAmBvK,GAAM,SAAAe,GACnBA,GACFC,QAAQC,IAAI,kBACZqJ,GAAkB,KAElBtJ,QAAQC,IAAI,mBACZqJ,GAAkB,OAIfD,EAAiBL,IAAmBG,KCP9BK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjK,MAAK,YAAkD,IAA/CkK,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.3d8ffbe5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/chessMove.25525989.mp3\";","export default __webpack_public_path__ + \"static/media/chessCapture.7d1fc293.mp3\";","export default __webpack_public_path__ + \"static/media/newGame.e759e3ac.mp3\";","export default __webpack_public_path__ + \"static/media/checkMate.e759e3ac.mp3\";","import { getAnalytics } from 'firebase/analytics'\nimport { initializeApp } from 'firebase/app'\nimport {\n  getFirestore,\n  collection,\n  getDocs,\n  doc,\n  onSnapshot,\n  setDoc,\n  getDoc,\n} from 'firebase/firestore'\nimport {\n  getAuth,\n  onAuthStateChanged,\n  GoogleAuthProvider,\n  signInWithPopup,\n  signOut,\n} from 'firebase/auth'\n\nconst {\n  REACT_APP_FIREBASE_API_KEY,\n  REACT_APP_AUTH_DOMAIN,\n  REACT_APP_PROJECT_ID,\n  REACT_APP_STORAGE_BUCKET,\n  REACT_APP_MESSAGING_SENDER_ID,\n  REACT_APP_APP_ID,\n  REACT_APP_MEASUREMENT_ID,\n} = process.env\n\nconst firebaseConfig = {\n  apiKey: REACT_APP_FIREBASE_API_KEY,\n  authDomain: REACT_APP_AUTH_DOMAIN,\n  projectId: REACT_APP_PROJECT_ID,\n  storageBucket: REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: REACT_APP_MESSAGING_SENDER_ID,\n  appId: REACT_APP_APP_ID,\n  measurementId: REACT_APP_MEASUREMENT_ID,\n}\n\nconst app = initializeApp(firebaseConfig)\nconst auth = getAuth(app)\n\nconst analytics = getAnalytics(app)\n\nconst db = getFirestore(app)\n\nconst getGames = async db => {\n  const gamesCollection = collection(db, 'games')\n  const gamesSnapshot = await getDocs(gamesCollection)\n  const games = gamesSnapshot.docs.map(doc => doc.data())\n  return games\n}\n\nconst getGame = async (db, docId) => {\n  const gameRef = doc(db, 'games', docId)\n  const gameSnap = await getDoc(gameRef)\n  return gameSnap.data()\n}\n\nconst googleProvider = new GoogleAuthProvider()\n// googleProvider.addScope('https://www.googleapis.com/auth/contacts.readonly')\n\nexport const signInWithGoogle = () => {\n  signInWithPopup(auth, googleProvider)\n    .then(result => {\n      // This gives you a Google Access Token. You can use it to access the Google API.\n      const credential = GoogleAuthProvider.credentialFromResult(result)\n      const token = credential.accessToken\n      // The signed-in user info.\n      const user = result.user\n      // ...\n      console.log('signed in successfully! ', credential, token, user)\n    })\n    .catch(error => {\n      // Handle Errors here.\n      const errorCode = error.code\n      const errorMessage = error.message\n      // The email of the user's account used.\n      const email = error.email\n      // The AuthCredential type that was used.\n      const credential = GoogleAuthProvider.credentialFromError(error)\n      // ...\n      console.log('error ', error, errorCode, errorMessage, email, credential)\n    })\n}\n\nexport {\n  analytics,\n  auth,\n  getAuth,\n  db,\n  collection,\n  getDocs,\n  onSnapshot,\n  doc,\n  onAuthStateChanged,\n  setDoc,\n  getGame,\n  getGames,\n  signOut,\n  getDoc,\n}\n","import { useEffect, useRef, useState } from 'react'\nimport Chessboard from 'chessboardjsx'\nimport * as Chess from 'chess.js'\nimport useSound from 'use-sound'\nimport chessMoveSfx from '../sounds/chessMove.mp3'\nimport chessCaptureSfx from '../sounds/chessCapture.mp3'\nimport chessNewGameSfx from '../sounds/newGame.mp3'\nimport chessCheckmateSfx from '../sounds/checkMate.mp3'\nimport '../App.css'\nimport { db, onSnapshot, doc, setDoc, getDoc } from '../firebase'\n// import { useParams } from 'react-router-dom'\nimport { auth, signOut } from '../firebase'\n\nconst STARTING_POSITION =\n  'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1'\n\nconst GAME_DOC_ID = 'DEa2F0wP3xBZjtjHNit6'\n\nfunction ChessRoom() {\n  const [firebaseChessBoard, setFirebaseChessBoard] = useState(new Chess())\n  const [firebaseChessBoardHistory, setFirebaseChessBoardHistory] = useState([])\n  const [firebaseChessBoardPgn, setFirebaseChessBoardPgn] = useState(\n    'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1'\n  )\n\n  const [undoMovesHistory, setUndoMovesHistory] = useState([])\n  const [firebaseGameId, setFirebaseGameId] = useState(GAME_DOC_ID)\n  const [firebaseGamePosition, setFirebaseGamePosition] =\n    useState(STARTING_POSITION)\n  const notationEndRef = useRef(null)\n  const [sideToMove, setSideToMove] = useState('w')\n  const [currentBoardWidth, setCurrentBoardWidth] = useState(560) // default width\n\n  // get all moves, play all moves.\n\n  // Function to reset the game\n  const resetGame = async firebaseGameId => {\n    // debugger\n    const gameRef = doc(db, 'games', firebaseGameId)\n    setDoc(\n      gameRef,\n      { position: STARTING_POSITION, pgn: [], moves: [] },\n      { merge: true }\n    )\n    const gameSnap = await getDoc(gameRef)\n    console.log(gameSnap.data())\n    console.log(firebaseChessBoardHistory)\n    setFirebaseChessBoardHistory(gameSnap.data().moves)\n    newGameSound({ id: 'newGame' })\n  }\n\n  const updateGameOnMove = (sourceSquare, targetSquare, piece) => {\n    // TODO - make the move first, THEN do async tasks with database\n    // who's turn is it to move?\n    // debugger\n    const newChessBoard = new Chess()\n    const _ =\n      firebaseChessBoardPgn.length !== 0\n        ? newChessBoard.load_pgn(firebaseChessBoardPgn)\n        : null\n    const moveInfo = newChessBoard.move({\n      from: sourceSquare,\n      to: targetSquare,\n      promotion: 'q',\n    })\n\n    setFirebaseChessBoard(newChessBoard)\n    setFirebaseChessBoardHistory(newChessBoard.history())\n\n    // debugger\n    if (moveInfo) {\n      setSideToMove(newChessBoard.fen().split(' ')[1])\n      const { sideMadeLastMove, sideToMove } =\n        newChessBoard.fen().split(' ')[1] === 'w'\n          ? { sideMadeLastMove: 'black', sideToMove: 'white' }\n          : { sideMadeLastMove: 'white', sideToMove: 'black' }\n      console.log(\n        `${sideMadeLastMove} just played ${moveInfo.san}... now it's ${sideToMove} to move...`\n      )\n\n      const { flags, san } = moveInfo\n\n      const _ = san.includes('#') ? checkMateSound({ id: 'checkMate' }) : null\n\n      flags === 'c' || flags === 'e'\n        ? chessCaptureSound({ id: 'capture' })\n        : chessMoveSound({ id: 'move' })\n\n      const gameRef = doc(db, 'games', GAME_DOC_ID)\n      setDoc(\n        gameRef,\n        {\n          position: newChessBoard.fen(),\n          moves: newChessBoard.history(),\n          pgn: newChessBoard.pgn(),\n        },\n        { merge: true }\n      )\n    }\n    return { newChessBoard }\n  }\n\n  useEffect(() => {\n    const unsubscribe = onSnapshot(doc(db, 'games', GAME_DOC_ID), doc => {\n      setFirebaseGamePosition(doc.data().position)\n      setFirebaseChessBoardPgn(doc.data().pgn)\n    })\n    return unsubscribe\n  }, [])\n\n  const [chessMoveSound] = useSound(chessMoveSfx, {\n    sprite: {\n      move: [170, 300],\n    },\n  })\n\n  const [chessCaptureSound] = useSound(chessCaptureSfx, {\n    sprite: {\n      capture: [250, 300],\n    },\n  })\n\n  const [checkMateSound] = useSound(chessCheckmateSfx, {\n    sprite: {\n      checkMate: [0, 1000],\n    },\n  })\n\n  const [newGameSound] = useSound(chessNewGameSfx, {\n    sprite: {\n      newGame: [0, 1000],\n    },\n  })\n\n  const whiteMovesColumn = moves =>\n    moves\n      .filter((_, index) => index % 2 === 0)\n      .map(move => <p style={{ color: '#BABABA', fontSize: 20 }}>{move}</p>)\n\n  const blackMovesColumn = moves =>\n    moves\n      .filter((_, index) => index % 2 !== 0)\n      .map(move => <p style={{ color: '#BABABA', fontSize: 20 }}>{move}</p>)\n\n  const numberMovesColumn = moves => {\n    const plysToMoveCount =\n      moves.length % 2 === 0 ? moves.length / 2 : Math.ceil(moves.length / 2)\n\n    const turnCount = Array.from(Array(plysToMoveCount).keys()).map(\n      num => num + 1\n    )\n\n    return turnCount.map(turn => (\n      <p style={{ color: '#BABABA', fontSize: 20 }}>{turn}</p>\n    ))\n  }\n\n  // useEffect(() => {\n  //   notationEndRef?.current?.scrollIntoView({ behavior: 'smooth' })\n  // })\n\n  const players = [\n    { name: auth.currentUser.displayName },\n    { name: 'Adil Dzelilovic' },\n  ]\n\n  return (\n    <div style={styles.container}>\n      <div>\n        {players.map(({ name }, i) => (\n          <div style={{ display: 'flex', alignItems: 'center' }}>\n            <img\n              src={auth.currentUser.photoURL}\n              alt=''\n              style={{\n                height: 45,\n                marginRight: 10,\n                borderRadius: '50%',\n                resizeMode: 'contain',\n              }}\n            />\n            <h2\n              key={i}\n              style={{\n                color: '#BABABA',\n                padding: 10,\n                // backgroundColor: '#262421',\n                fontSize: 'max(calc(0.9vw + 0.9vh), 16px)',\n                backgroundColor:\n                  name.includes('Adil') && sideToMove === 'w'\n                    ? '#384722'\n                    : name.includes('Qazi') && sideToMove === 'b'\n                    ? '#384722'\n                    : '#262421',\n              }}\n            >\n              {name}\n            </h2>\n          </div>\n        ))}\n      </div>\n      <div\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <Chessboard\n          position={firebaseGamePosition}\n          transitionDuration={100}\n          calcWidth={({ screenWidth }) => {\n            if (screenWidth <= currentBoardWidth + 40) {\n              setCurrentBoardWidth(screenWidth - 40)\n            }\n          }}\n          onDrop={({ sourceSquare, targetSquare, piece }) => {\n            updateGameOnMove(sourceSquare, targetSquare, piece)\n          }}\n          width={currentBoardWidth}\n          boardStyle={{ margin: '0 2vw max(2vw, 20px)' }}\n        />\n        <div>\n          <button\n            style={{\n              fontSize: 20,\n              padding: '7px 10px',\n              borderRadius: '5px',\n              backgroundColor: '#2F2E2C',\n              color: '#BABABA',\n              cursor: 'pointer',\n            }}\n            id='start'\n            onClick={() => resetGame(firebaseGameId)}\n          >\n            New Game\n          </button>\n          <button\n            style={{\n              fontSize: 20,\n              padding: '7px 10px',\n              borderRadius: '5px',\n              backgroundColor: '#2F2E2C',\n              color: '#BABABA',\n              cursor: 'pointer',\n            }}\n            id='start'\n            onClick={() =>\n              signOut(auth)\n                .then(() => console.log('signed out successfully!'))\n                .catch(err => console.log(err))\n            }\n          >\n            Sign Out\n          </button>\n        </div>\n      </div>\n\n      <div style={{ display: 'flex', flexDirection: 'column' }}>\n        <div style={styles.movesContainer}>\n          <div\n            style={{\n              flex: 1,\n              backgroundColor: '#302E2C',\n              textAlign: 'center',\n            }}\n          >\n            {numberMovesColumn(firebaseChessBoardHistory)}\n          </div>\n          <div className='notation' style={{ flex: 2, marginLeft: 10 }}>\n            {whiteMovesColumn(firebaseChessBoardHistory)}\n          </div>\n          <div className='notation' style={{ flex: 2 }}>\n            {blackMovesColumn(firebaseChessBoardHistory)}\n          </div>\n        </div>\n\n        <div\n          style={{\n            display: 'flex',\n            justifyContent: 'flex-end',\n            marginBottom: 'min(1vw, 30px)',\n          }}\n        >\n          <button\n            style={styles.button}\n            onClick={async () => {\n              const lastMove = firebaseChessBoard.undo()\n              console.log(lastMove)\n              if (lastMove === null) return\n\n              const gameRef = doc(db, 'games', GAME_DOC_ID)\n              // debugger\n              const gameSnap = await getDoc(gameRef)\n              const undoMoves = gameSnap.data().undoMovesHistory\n              setDoc(\n                gameRef,\n                { undoMovesHistory: [...undoMoves, lastMove] },\n                { merge: true }\n              )\n\n              setUndoMovesHistory([...undoMovesHistory, lastMove])\n\n              // console.log(undoMovesHistory)\n              // setPosition(firebaseChessBoard.fen())\n            }}\n          >\n            👈\n          </button>\n          <button\n            style={styles.button}\n            onClick={() => {\n              const tempUndo = [...undoMovesHistory]\n              if (tempUndo.length === 0) return\n              const { flags, from, to } = tempUndo.pop()\n\n              flags === 'c' || flags === 'e'\n                ? chessCaptureSound({ id: 'capture' })\n                : chessMoveSound({ id: 'move' })\n\n              setUndoMovesHistory(tempUndo)\n\n              firebaseChessBoard.move({ from, to })\n              // undo gives you a from and a to\n            }}\n          >\n            👉\n          </button>\n        </div>\n        {/* <div ref={notationEndRef}></div> */}\n      </div>\n    </div>\n  )\n}\n\nconst styles = {\n  container: {\n    backgroundColor: '#161512',\n    minHeight: '100vh',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    padding: '10px 20px 20px',\n  },\n\n  button: {\n    backgroundColor: 'transparent',\n    fontSize: 50,\n    border: 'none',\n    cursor: 'pointer',\n  },\n\n  movesContainer: {\n    display: 'flex',\n    backgroundColor: '#262421',\n    width: 400,\n    maxWidth: '90vw',\n    height: 'calc(20vw + 20vh)',\n    minHeight: 250,\n    justifyContent: 'space-between',\n    overflowY: 'scroll',\n    margin: 'max(0.8vw, 30px) 0 5px',\n  },\n\n  movesText: {\n    fontSize: 20,\n    color: 'white',\n  },\n}\n\nexport default ChessRoom\n","import React from 'react'\nimport '../styles/Login.css'\nimport { signInWithGoogle } from '../firebase'\n\nexport default function Login() {\n  return (\n    <div className='container'>\n      <h2 style={{ color: 'white' }}>♟ ️Qazi's Lichess Clone...</h2>\n      <div className='login-buttons'>\n        <button className='login-provider-button' onClick={signInWithGoogle}>\n          <img\n            src='https://img.icons8.com/color/48/000000/google-logo.png'\n            alt='google icon'\n          />\n          <span> Continue with Google</span>\n        </button>\n      </div>\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport ChessRoom from './pages/ChessRoom'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport Login from './pages/Login'\nimport { onAuthStateChanged, auth } from './firebase'\n\nconst App = () => {\n  // onAuthStateChanged\n  const [isUserLoggedIn, setIsUserLoggedIn] = useState(null)\n  onAuthStateChanged(auth, user => {\n    if (user) {\n      console.log('user logged in')\n      setIsUserLoggedIn(true)\n    } else {\n      console.log('user logged out')\n      setIsUserLoggedIn(false)\n    }\n  })\n\n  return isUserLoggedIn ? signedInRoutes() : signedOutRoutes()\n}\n\nconst signedInRoutes = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route path={`/play/:gameId`} component={ChessRoom} />\n        <Route path={``} component={ChessRoom} />\n      </Switch>\n    </Router>\n  )\n}\n\nconst signedOutRoutes = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route path={``} component={Login} />\n      </Switch>\n    </Router>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}